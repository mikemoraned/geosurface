// Generated by CoffeeScript 1.6.3
(function() {
  var _this = this;

  console.log("Running");

  d3.csv("datamanip/ontime_geohashes.csv", function(csv) {
    var GeoHashLevelRollupPairMinMax, all, allPairs, colors, dimensions, facts, groupMinMax, groups, pairs;
    console.log("Loaded csv, number of rows: " + csv.length);
    facts = crossfilter(csv);
    all = facts.groupAll();
    console.log("Creating dimensions ...");
    dimensions = {
      Origin: facts.dimension(function(d) {
        return d.Origin;
      }),
      GeoHashPair: facts.dimension(function(d) {
        return "" + d.Origin_Hash + "," + d.Dest_Hash;
      }),
      GeoHashLevelRollupPair: facts.dimension(function(d) {
        return "" + d.Origin_Hash.slice(0, 1) + "->" + d.Dest_Hash.slice(0, 1);
      })
    };
    console.log("Created dimensions");
    console.log("Creating groups ...");
    groups = {
      GeoHashLevelRollupPair: dimensions.GeoHashLevelRollupPair.group()
    };
    console.log("Created groups");
    groupMinMax = function(group) {
      var pairs, values;
      values = (function() {
        var _i, _len, _ref, _results;
        _ref = group.all();
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          pairs = _ref[_i];
          _results.push(pairs.value);
        }
        return _results;
      })();
      return [d3.min(values), d3.max(values)];
    };
    GeoHashLevelRollupPairMinMax = groupMinMax(groups.GeoHashLevelRollupPair);
    colors = d3.scale.linear().domain(GeoHashLevelRollupPairMinMax).range(['white', 'red']);
    dc.pieChart("#geohash-level2-pie-chart").dimension(dimensions.GeoHashLevelRollupPair).group(groups.GeoHashLevelRollupPair).colorCalculator(colors).colorAccessor(function(d) {
      return d.value;
    }).renderLabel(true);
    allPairs = (function() {
      var _i, _len, _ref, _results;
      _ref = groups.GeoHashLevelRollupPair.all();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        pairs = _ref[_i];
        _results.push(pairs.key);
      }
      return _results;
    })();
    dc.barChart("#geohash-level2-row-chart").margins({
      top: 10,
      right: 50,
      bottom: 30,
      left: 80
    }).width(1000).dimension(dimensions.GeoHashLevelRollupPair).group(groups.GeoHashLevelRollupPair).x(d3.scale.ordinal().domain(allPairs));
    dc.dataTable(".dc-data-table").dimension(dimensions.Origin).group(function(d) {
      return d;
    }).columns([
      function(d) {
        return d.Origin;
      }, function(d) {
        return d.Origin_Hash;
      }, function(d) {
        return d.Dest;
      }, function(d) {
        return d.Dest_Hash;
      }
    ]).sortBy(function(d) {
      return "" + d.Origin + "-" + d.Dest;
    }).order(d3.ascending);
    return dc.renderAll();
  });

}).call(this);

/*
//@ sourceMappingURL=main.map
*/
